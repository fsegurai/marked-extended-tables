name: "CI"
on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      run_coverage:
        description: "Run coverage (yes/no)"
        required: false
        default: "no"

permissions:
  packages: write
  contents: read

jobs:
  Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm ci
      - name: Run Tests 👩🏽‍💻
        run: npm run test

  Coverage:
    if: ${{ github.event.inputs.run_coverage == 'yes' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm ci
      - name: Run Tests 👩🏽‍💻
        run: npm run test:cover

  Lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm ci
      - name: Lint ✨
        run: npm run lint

  Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm ci
      - name: Build 🗜️
        run: npm run build

  TestTypes:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Node
        uses: dcodeIO/setup-node-nvm@master
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm ci
      - name: Run Tests 👩🏽‍💻
        run: npm run test:types

  Release:
    needs: [Test, Lint, Build, TestTypes]
    if: |
      github.ref == 'refs/heads/main' &&
      github.event.repository.fork == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://npm.pkg.github.com/"
          scope: "@fsegurai"
          always-auth: true
      - name: Install Dependencies
        run: npm ci
      - name: Build 🗜️
        run: |
          npm run build
          if ! git diff --quiet; then
            git config --global user.email "<>"
            git config --global user.name "CI Build"
            git commit -am "🗜️ build [skip ci]"
          fi
      - name: Release 🎉
        run: npm publish && npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
